CCS PCH C Compiler, Version 4.104, 5967               20-févr.-15 18:45

               Filename: F:\DUT\S2\Architecture et programmation\Digicode\digicode.lst

               ROM used: 1204 bytes (4%)
                         Largest free fragment is 31560
               RAM used: 33 (2%) at main() level
                         38 (2%) worst case
               Stack:    2 worst case (0 in main + 2 for interrupts)

*
0000:  GOTO   03B8
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   00A2
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   010A
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... #include "F:\DUT\S2\Architecture et programmation\Digicode\digicode.h" 
.................... #include <18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOOSCSEN              	//Oscillator switching is disabled, main oscillator is source 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
....................  
.................... #use delay(clock=20000000) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
....................  
.................... #define c1h output_high(pin_d0) 
.................... #define c1l output_low(pin_d0) 
.................... #define c2h output_high(pin_d1) 
.................... #define c2l output_low(pin_d1) 
.................... #define c3h output_high(pin_d2) 
.................... #define c3l output_low(pin_d2) 
.................... #define alarme_on output_high(pin_c1) 
.................... #define alarme_off output_low(pin_c1) 
....................  
.................... #define l1 input(pin_d3) 
.................... #define l2 input(pin_d4) 
.................... #define l3 input(pin_d5) 
.................... #define l4 input(pin_d6) 
....................  
.................... #define porte1 input(pin_b1) 
.................... #define porte2 input(pin_b2) 
.................... #define fenetre1 input(pin_b3) 
.................... #define fenetre2 input(pin_b4) 
.................... #define fenetre3 input(pin_b5) 
.................... #define fenetre4 input(pin_b6) 
....................  
.................... int16 code,dixieme,seconde; 
.................... int1 alarme,sonne; 
....................  
.................... #int_TIMER1 
.................... void TIMER1_isr(void) 
.................... { 
....................    set_timer1(3036); 
*
00A2:  MOVLW  0B
00A4:  MOVWF  FCF
00A6:  MOVLW  DC
00A8:  MOVWF  FCE
....................    dixieme++; 
00AA:  INCF   18,F
00AC:  BTFSC  FD8.2
00AE:  INCF   19,F
....................    if(dixieme==10) 
00B0:  MOVF   18,W
00B2:  SUBLW  0A
00B4:  BNZ   00C4
00B6:  MOVF   19,F
00B8:  BNZ   00C4
....................    { 
....................       dixieme=0; 
00BA:  CLRF   19
00BC:  CLRF   18
....................       seconde++; 
00BE:  INCF   1A,F
00C0:  BTFSC  FD8.2
00C2:  INCF   1B,F
....................    } 
.................... } 
....................  
00C4:  BCF    F9E.0
00C6:  GOTO   0060
.................... #int_EXT 
.................... void  EXT_isr(void)  
.................... { 
....................    c1h;c2l;c3l; 
*
010A:  BCF    F95.0
010C:  BSF    F8C.0
010E:  BCF    F95.1
0110:  BCF    F8C.1
0112:  BCF    F95.2
0114:  BCF    F8C.2
....................    delay_us(50); 
0116:  MOVLW  53
0118:  MOVWF  00
011A:  DECFSZ 00,F
011C:  BRA    011A
....................    if(l1) {printf("1");code=code*10+1;} 
011E:  BSF    F95.3
0120:  BTFSS  F83.3
0122:  BRA    0148
0124:  MOVLW  31
0126:  BTFSS  F9E.4
0128:  BRA    0126
012A:  MOVWF  FAD
012C:  MOVFF  17,22
0130:  MOVFF  16,21
0134:  CLRF   24
0136:  MOVLW  0A
0138:  MOVWF  23
013A:  RCALL  00CA
013C:  MOVLW  01
013E:  ADDWF  01,W
0140:  MOVWF  16
0142:  MOVLW  00
0144:  ADDWFC 02,W
0146:  MOVWF  17
....................    if(l2) {printf("4");code=code*10+4;} 
0148:  BSF    F95.4
014A:  BTFSS  F83.4
014C:  BRA    0172
014E:  MOVLW  34
0150:  BTFSS  F9E.4
0152:  BRA    0150
0154:  MOVWF  FAD
0156:  MOVFF  17,22
015A:  MOVFF  16,21
015E:  CLRF   24
0160:  MOVLW  0A
0162:  MOVWF  23
0164:  RCALL  00CA
0166:  MOVLW  04
0168:  ADDWF  01,W
016A:  MOVWF  16
016C:  MOVLW  00
016E:  ADDWFC 02,W
0170:  MOVWF  17
....................    if(l3) {printf("7");code=code*10+7;} 
0172:  BSF    F95.5
0174:  BTFSS  F83.5
0176:  BRA    019C
0178:  MOVLW  37
017A:  BTFSS  F9E.4
017C:  BRA    017A
017E:  MOVWF  FAD
0180:  MOVFF  17,22
0184:  MOVFF  16,21
0188:  CLRF   24
018A:  MOVLW  0A
018C:  MOVWF  23
018E:  RCALL  00CA
0190:  MOVLW  07
0192:  ADDWF  01,W
0194:  MOVWF  16
0196:  MOVLW  00
0198:  ADDWFC 02,W
019A:  MOVWF  17
....................     
....................    c2h;c1l;c3l; 
019C:  BCF    F95.1
019E:  BSF    F8C.1
01A0:  BCF    F95.0
01A2:  BCF    F8C.0
01A4:  BCF    F95.2
01A6:  BCF    F8C.2
....................    delay_us(50); 
01A8:  MOVLW  53
01AA:  MOVWF  00
01AC:  DECFSZ 00,F
01AE:  BRA    01AC
....................    if(l1) {printf("2");code=code*10+2;} 
01B0:  BSF    F95.3
01B2:  BTFSS  F83.3
01B4:  BRA    01DA
01B6:  MOVLW  32
01B8:  BTFSS  F9E.4
01BA:  BRA    01B8
01BC:  MOVWF  FAD
01BE:  MOVFF  17,22
01C2:  MOVFF  16,21
01C6:  CLRF   24
01C8:  MOVLW  0A
01CA:  MOVWF  23
01CC:  RCALL  00CA
01CE:  MOVLW  02
01D0:  ADDWF  01,W
01D2:  MOVWF  16
01D4:  MOVLW  00
01D6:  ADDWFC 02,W
01D8:  MOVWF  17
....................    if(l2) {printf("5");code=code*10+5;} 
01DA:  BSF    F95.4
01DC:  BTFSS  F83.4
01DE:  BRA    0204
01E0:  MOVLW  35
01E2:  BTFSS  F9E.4
01E4:  BRA    01E2
01E6:  MOVWF  FAD
01E8:  MOVFF  17,22
01EC:  MOVFF  16,21
01F0:  CLRF   24
01F2:  MOVLW  0A
01F4:  MOVWF  23
01F6:  RCALL  00CA
01F8:  MOVLW  05
01FA:  ADDWF  01,W
01FC:  MOVWF  16
01FE:  MOVLW  00
0200:  ADDWFC 02,W
0202:  MOVWF  17
....................    if(l3) {printf("8");code=code*10+8;} 
0204:  BSF    F95.5
0206:  BTFSS  F83.5
0208:  BRA    022E
020A:  MOVLW  38
020C:  BTFSS  F9E.4
020E:  BRA    020C
0210:  MOVWF  FAD
0212:  MOVFF  17,22
0216:  MOVFF  16,21
021A:  CLRF   24
021C:  MOVLW  0A
021E:  MOVWF  23
0220:  RCALL  00CA
0222:  MOVLW  08
0224:  ADDWF  01,W
0226:  MOVWF  16
0228:  MOVLW  00
022A:  ADDWFC 02,W
022C:  MOVWF  17
....................    if(l4) {printf("0");code=code*10;} 
022E:  BSF    F95.6
0230:  BTFSS  F83.6
0232:  BRA    0254
0234:  MOVLW  30
0236:  BTFSS  F9E.4
0238:  BRA    0236
023A:  MOVWF  FAD
023C:  MOVFF  17,22
0240:  MOVFF  16,21
0244:  CLRF   24
0246:  MOVLW  0A
0248:  MOVWF  23
024A:  RCALL  00CA
024C:  MOVFF  02,17
0250:  MOVFF  01,16
....................     
....................    c3h;c1l;c2l; 
0254:  BCF    F95.2
0256:  BSF    F8C.2
0258:  BCF    F95.0
025A:  BCF    F8C.0
025C:  BCF    F95.1
025E:  BCF    F8C.1
....................    delay_us(50); 
0260:  MOVLW  53
0262:  MOVWF  00
0264:  DECFSZ 00,F
0266:  BRA    0264
....................    if(l1) {printf("3");code=code*10+3;} 
0268:  BSF    F95.3
026A:  BTFSS  F83.3
026C:  BRA    0292
026E:  MOVLW  33
0270:  BTFSS  F9E.4
0272:  BRA    0270
0274:  MOVWF  FAD
0276:  MOVFF  17,22
027A:  MOVFF  16,21
027E:  CLRF   24
0280:  MOVLW  0A
0282:  MOVWF  23
0284:  RCALL  00CA
0286:  MOVLW  03
0288:  ADDWF  01,W
028A:  MOVWF  16
028C:  MOVLW  00
028E:  ADDWFC 02,W
0290:  MOVWF  17
....................    if(l2) {printf("6");code=code*10+6;} 
0292:  BSF    F95.4
0294:  BTFSS  F83.4
0296:  BRA    02BC
0298:  MOVLW  36
029A:  BTFSS  F9E.4
029C:  BRA    029A
029E:  MOVWF  FAD
02A0:  MOVFF  17,22
02A4:  MOVFF  16,21
02A8:  CLRF   24
02AA:  MOVLW  0A
02AC:  MOVWF  23
02AE:  RCALL  00CA
02B0:  MOVLW  06
02B2:  ADDWF  01,W
02B4:  MOVWF  16
02B6:  MOVLW  00
02B8:  ADDWFC 02,W
02BA:  MOVWF  17
....................    if(l3) {printf("9");code=code*10+9;} 
02BC:  BSF    F95.5
02BE:  BTFSS  F83.5
02C0:  BRA    02E6
02C2:  MOVLW  39
02C4:  BTFSS  F9E.4
02C6:  BRA    02C4
02C8:  MOVWF  FAD
02CA:  MOVFF  17,22
02CE:  MOVFF  16,21
02D2:  CLRF   24
02D4:  MOVLW  0A
02D6:  MOVWF  23
02D8:  RCALL  00CA
02DA:  MOVLW  09
02DC:  ADDWF  01,W
02DE:  MOVWF  16
02E0:  MOVLW  00
02E2:  ADDWFC 02,W
02E4:  MOVWF  17
....................    if(l4) {printf("\n\r"); 
02E6:  BSF    F95.6
02E8:  BTFSS  F83.6
02EA:  BRA    0362
02EC:  MOVLW  0A
02EE:  BTFSS  F9E.4
02F0:  BRA    02EE
02F2:  MOVWF  FAD
02F4:  MOVLW  0D
02F6:  BTFSS  F9E.4
02F8:  BRA    02F6
02FA:  MOVWF  FAD
....................       if(code==33) 
02FC:  MOVF   16,W
02FE:  SUBLW  21
0300:  BNZ   031A
0302:  MOVF   17,F
0304:  BNZ   031A
....................       { 
....................          printf("Alarme activee\n\r"); 
0306:  MOVLW  7C
0308:  MOVWF  FF6
030A:  MOVLW  03
030C:  MOVWF  FF7
030E:  RCALL  00E8
....................          seconde=0; 
0310:  CLRF   1B
0312:  CLRF   1A
....................          alarme=1; 
0314:  BSF    1C.0
....................          code=0; 
0316:  CLRF   17
0318:  CLRF   16
....................       } 
....................       if(code==1664) 
031A:  MOVF   16,W
031C:  SUBLW  80
031E:  BNZ   0336
0320:  MOVF   17,W
0322:  SUBLW  06
0324:  BNZ   0336
....................       { 
....................          printf("Alarme desactivee\n\r"); 
0326:  MOVLW  8E
0328:  MOVWF  FF6
032A:  MOVLW  03
032C:  MOVWF  FF7
032E:  RCALL  00E8
....................          alarme=0; 
0330:  BCF    1C.0
....................          code=0; 
0332:  CLRF   17
0334:  CLRF   16
....................       }    
....................       if(code!=33 && code!=1664 && code!=0) 
0336:  MOVF   16,W
0338:  SUBLW  21
033A:  BNZ   0340
033C:  MOVF   17,F
033E:  BZ    0362
0340:  MOVF   16,W
0342:  SUBLW  80
0344:  BNZ   034C
0346:  MOVF   17,W
0348:  SUBLW  06
034A:  BZ    0362
034C:  MOVF   16,F
034E:  BNZ   0354
0350:  MOVF   17,F
0352:  BZ    0362
....................       { 
....................          printf("Saisie incorrecte!\n\r"); 
0354:  MOVLW  A2
0356:  MOVWF  FF6
0358:  MOVLW  03
035A:  MOVWF  FF7
035C:  RCALL  00E8
....................          code=0; 
035E:  CLRF   17
0360:  CLRF   16
....................       }  
....................    }    
....................    c1h;c2h;c3h; 
0362:  BCF    F95.0
0364:  BSF    F8C.0
0366:  BCF    F95.1
0368:  BSF    F8C.1
036A:  BCF    F95.2
036C:  BSF    F8C.2
....................    delay_us(50); 
036E:  MOVLW  53
0370:  MOVWF  00
0372:  DECFSZ 00,F
0374:  BRA    0372
.................... } 
....................  
0376:  BCF    FF2.1
0378:  GOTO   0060
.................... void main() 
.................... { 
*
03B8:  CLRF   FF8
03BA:  BCF    FD0.7
03BC:  BSF    07.7
03BE:  CLRF   FEA
03C0:  CLRF   FE9
03C2:  MOVLW  81
03C4:  MOVWF  FAF
03C6:  MOVLW  A6
03C8:  MOVWF  FAC
03CA:  MOVLW  90
03CC:  MOVWF  FAB
03CE:  BSF    FC1.0
03D0:  BSF    FC1.1
03D2:  BSF    FC1.2
03D4:  BCF    FC1.3
....................  
....................    setup_adc_ports(NO_ANALOGS); 
03D6:  BSF    FC1.0
03D8:  BSF    FC1.1
03DA:  BSF    FC1.2
03DC:  BCF    FC1.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
03DE:  BCF    FC1.6
03E0:  BCF    FC2.6
03E2:  BCF    FC2.7
03E4:  BCF    FC1.7
03E6:  BSF    FC2.0
....................    setup_psp(PSP_DISABLED); 
03E8:  BCF    F96.4
....................    setup_spi(SPI_SS_DISABLED); 
03EA:  BCF    FC6.5
03EC:  BCF    F94.5
03EE:  BSF    F94.4
03F0:  BCF    F94.3
03F2:  MOVLW  01
03F4:  MOVWF  FC6
03F6:  MOVLW  00
03F8:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
03FA:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
03FC:  MOVLW  80
03FE:  MOVWF  FD5
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
0400:  MOVLW  B5
0402:  MOVWF  FCD
....................    setup_timer_2(T2_DISABLED,0,1); 
0404:  MOVLW  00
0406:  MOVWF  FCA
0408:  MOVLW  00
040A:  MOVWF  FCB
....................    enable_interrupts(INT_TIMER1); 
040C:  BSF    F9D.0
....................    enable_interrupts(INT_EXT); 
040E:  BSF    FF2.4
....................    enable_interrupts(GLOBAL); 
0410:  MOVLW  C0
0412:  IORWF  FF2,F
.................... //Setup_Oscillator parameter not selected from Intr Oscillator Config tab 
....................  
....................    // TODO: USER CODE!! 
....................  
.................... c1h;c2h;c3h; 
0414:  BCF    F95.0
0416:  BSF    F8C.0
0418:  BCF    F95.1
041A:  BSF    F8C.1
041C:  BCF    F95.2
041E:  BSF    F8C.2
.................... while(true) 
.................... { 
....................    if(sonne==0) 
0420:  BTFSC  1C.1
0422:  BRA    0488
....................    { 
....................       if(!fenetre1 && alarme==1 || !fenetre2 && alarme==1 || !fenetre3 && alarme==1 || !fenetre4 && alarme==1) 
0424:  BSF    F93.3
0426:  BTFSC  F81.3
0428:  BRA    042E
042A:  BTFSC  1C.0
042C:  BRA    044C
042E:  BSF    F93.4
0430:  BTFSC  F81.4
0432:  BRA    0438
0434:  BTFSC  1C.0
0436:  BRA    044C
0438:  BSF    F93.5
043A:  BTFSC  F81.5
043C:  BRA    0442
043E:  BTFSC  1C.0
0440:  BRA    044C
0442:  BSF    F93.6
0444:  BTFSC  F81.6
0446:  BRA    0452
0448:  BTFSS  1C.0
044A:  BRA    0452
....................       { 
....................          seconde=0; 
044C:  CLRF   1B
044E:  CLRF   1A
....................          sonne=1; 
0450:  BSF    1C.1
....................       }    
....................       if((!porte1 || !porte2) && alarme==1) 
0452:  BSF    F93.1
0454:  BTFSS  F81.1
0456:  BRA    045E
0458:  BSF    F93.2
045A:  BTFSC  F81.2
045C:  BRA    0480
045E:  BTFSS  1C.0
0460:  BRA    0480
....................       { 
....................          if(seconde<=10) 
0462:  MOVF   1B,F
0464:  BNZ   0470
0466:  MOVF   1A,W
0468:  SUBLW  0A
046A:  BNC   0470
....................             alarme_off;    
046C:  BCF    F94.1
046E:  BCF    F8B.1
....................          if(seconde>10) 
0470:  MOVF   1B,F
0472:  BNZ   047A
0474:  MOVF   1A,W
0476:  SUBLW  0A
0478:  BC    0480
....................          { 
....................             seconde=0; 
047A:  CLRF   1B
047C:  CLRF   1A
....................             sonne=1; 
047E:  BSF    1C.1
....................          }    
....................       } 
....................       if(alarme==0) 
0480:  BTFSC  1C.0
0482:  BRA    0488
....................          alarme_off; 
0484:  BCF    F94.1
0486:  BCF    F8B.1
....................    } 
....................    if(sonne==1) 
0488:  BTFSS  1C.1
048A:  BRA    04B4
....................    { 
....................       if(seconde<=10 && alarme==1) 
048C:  MOVF   1B,F
048E:  BNZ   049E
0490:  MOVF   1A,W
0492:  SUBLW  0A
0494:  BNC   049E
0496:  BTFSS  1C.0
0498:  BRA    049E
....................          alarme_on;   
049A:  BCF    F94.1
049C:  BSF    F8B.1
....................       if(seconde>10 || alarme==0) 
049E:  MOVF   1B,F
04A0:  BNZ   04AC
04A2:  MOVF   1A,W
04A4:  SUBLW  0A
04A6:  BNC   04AC
04A8:  BTFSC  1C.0
04AA:  BRA    04B4
....................       { 
....................          alarme_off; 
04AC:  BCF    F94.1
04AE:  BCF    F8B.1
....................          alarme=0; 
04B0:  BCF    1C.0
....................          sonne=0; 
04B2:  BCF    1C.1
....................       }    
....................    }       
.................... } 
04B4:  BRA    0420
.................... } 
04B6:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0D   NOBROWNOUT WDT128 NOWDT BORV20 NOPUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
